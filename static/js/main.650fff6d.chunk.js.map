{"version":3,"sources":["components/CardDetails/styles.tsx","helpers/api.tsx","components/PovCharacters/index.tsx","components/PovCharacters/PovCharacters.tsx","components/CardDetails/index.tsx","components/CardDetails/CardDetails.tsx","components/BookCard/styles.tsx","components/BookCard/index.tsx","components/BookCard/BookCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","root","minWidth","background","palette","primary","main","title","fontSize","pos","marginBottom","request","fetch","then","result","json","PovCharacters","url","useState","character","setCharacter","loading","setLoading","useEffect","requestCharacters","response","console","log","LinearProgress","className","name","gender","culture","born","died","CardDetails","book","classes","isListVisible","setIsListVisible","chars","povCharacters","Card","variant","CardContent","Typography","color","gutterBottom","country","numberOfPages","component","authors","publisher","mediaType","released","slice","CardActions","Button","size","onClick","map","to","minHeight","bullet","display","margin","transform","BookCard","path","exact","App","books","setBooks","isbn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.650fff6d.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  root: {\n    minWidth: 400,\n    background: 'linear-gradient(to left, #Edefee, #C9c9c9);'\n  },\n  palette: {\n    primary: {\n      main: \"green\",\n    }\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});","const Url = 'https://www.anapioficeandfire.com/api/books'\n\nexport const requestCharacters = (url: string) => fetch(url)\n.then(result => result.json())\n\n\nexport const request = fetch(Url)\n.then(result => result.json())","import { PovCharacters } from './PovCharacters';\n\nexport default PovCharacters;\n","import React, { useState, useEffect } from 'react';\nimport { requestCharacters } from '../../helpers/api'\nimport './PovCharacters.css'\nimport { LinearProgress } from '@material-ui/core';\n\ninterface CharProps {\n  url: string,\n};\n\nexport const PovCharacters: React.FC<CharProps> = ({ url }) => {\n   const [character, setCharacter]: any = useState([])\n   const [loading, setLoading]: any = useState(true)\n\n  useEffect(() => {\n      requestCharacters(url)\n      .then(response => setCharacter(response))\n      .then(() => setLoading(false))\n  }, [url]);\n\n  console.log(character)\n\n  return (\n    <>\n      {\n        loading\n          ? <LinearProgress />\n          : <ul>\n              <li className=\"character\">{character.name}\n                <div className=\"character_info\">\n                  <p>{`Gender: ${character.gender}`}</p>\n                  <p>{`Culture: ${character.culture}`}</p>\n                  <p>{`Born: ${character.born}`}</p>\n                  <p>{`Died: ${character.died ? character.died : '-'}`}</p>\n                </div>\n              </li>\n            </ul>\n      }\n    </>\n  )\n}\n","import { CardDetails } from './CardDetails';\n\nexport default CardDetails;\n","import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { ICard } from '../../helpers/type'\nimport { useStyles } from './styles';\nimport PovCharacters from '.././PovCharacters'\n\ntype DetailsProps = {\n  book: ICard,\n};\n\nexport const CardDetails: React.FC<DetailsProps> = ({ book }) => {\n  const classes = useStyles();\n  const [ isListVisible, setIsListVisible] = useState(false)\n  const chars = book.povCharacters;\n\n  const handleClick = () => {\n    setIsListVisible(! isListVisible)\n  }\n \n  return (\n    <>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            {book.country}\n            <br></br>\n            {book.numberOfPages} pages\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            {book.name}\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\">\n            {book.authors}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Publisher: {book.publisher}\n            <br></br>\n            Mediatype: {book.mediaType}\n          </Typography>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            released :{book.released.slice(0, 10)}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button \n            size=\"small\"\n            onClick={handleClick}\n          >\n            Show characters\n          </Button>\n        </CardActions>\n        <div>\n          { isListVisible && chars.map((url: string) => <PovCharacters url={url}/>)}\n        </div>\n      </Card>\n      <Link to=\"/\" className=\"link_home\">\n        <Button size=\"small\">Back to all books</Button>\n      </Link>\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(to left, #Edefee, #C9c9c9);',\n    minWidth: 275,\n    minHeight: 160,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});","import { BookCard } from './BookCard';\n\nexport default BookCard;\n","import React from 'react';\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardDetails from '../CardDetails'\nimport { ICard } from '../../helpers/type'\n\nimport { useStyles } from './styles'\nimport './BookCard.css'\n\ninterface CardProps {\n  book: ICard,\n};\n\nexport const BookCard: React.FC<CardProps> = ({ book }) => {\n  const classes = useStyles();\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n      <Link to={`/info${book.name}`} className=\"link\">\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n              {book.name}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              {book.authors}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              {book.numberOfPages} pages\n            </Typography>\n          </CardContent>\n        </Card>\n      </Link>\n      </Route>\n      <Route path={`/info${book.name}`}>\n        <CardDetails book={book}/>\n      </Route>\n    </Switch>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { Route } from \"react-router-dom\";\nimport BookCard from './components/BookCard'\nimport './App.css';\nimport { request } from './helpers/api'\nimport { ICard } from './helpers/type'\n\nconst App:React.FC = () => {\n  const [books, setBooks] = useState<ICard[]>([])\n\n  useEffect(() => {\n    request.then(response => setBooks(response))\n  }, []);\n\n  return (\n    <Route path=\"/\">\n      <div className=\"App\">\n        <article className=\"wrapper\">\n        {books.map(book => <BookCard book={book} key={book.isbn}/>)}\n      </article>\n      </div>\n    </Route>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { HashRouter } from \"react-router-dom\";\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n/* ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); */\n"],"sourceRoot":""}